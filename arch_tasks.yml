- name: copy aliases dotfile to user
  copy:
    src: .aliases
    dest: /home/{{ homeuser }}/.aliases
    owner: "{{ homeuser }}"
    group: "{{ homeuser }}"
    mode: 0644
- name: add .aliases to .bashrc
  lineinfile:
    path: /home/{{ homeuser }}/.bashrc
    line: 'source ~/.aliases'
- name: remove .emacs file
  ansible.builtin.file:
    path: /home/{{ homeuser }}/.emacs
    state: absent
- name: Create emacs.d directory
  ansible.builtin.file:
   path: /home/{{ homeuser }}/.emacs.d
   state: directory
   mode: '0755'
   owner: "{{ homeuser }}"
- name: copy init.el to .emacs.d directory
  copy:
    src: init.el
    dest: /home/{{ homeuser }}/.emacs.d
    owner: "{{ homeuser }}"
    group: "{{ homeuser }}"
    mode: 0644
- name: install packages
  package:
    name: "{{ packages }}"
  vars:
    packages:
    - audacious
    - audacious-plugins
    - mpv
    - vlc
    - neovim
    - podman
    - pandoc
    - remmina
    - pavucontrol
    - httpie
    - base-devel
    - libdrm
    - make
    - dkms
    - ripgrep
    - clang
    - zsh
    - go
    - gopls
    - flatpak
    - base-devel
    - qemu-full
    - libvirt
    - virt-manager
    - dnsmasq
    - bridge-utils
    - htop
    - apparmor
    - libreoffice-fresh
    - xiphos
    - emacs-wayland
    - distrobox
- name: add flathub repo
  ansible.builtin.shell:
    cmd: flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
- name: install flatpaks
  community.general.flatpak:
    name:
      - org.signal.Signal
      - com.discordapp.Discord
      - im.riot.Riot
      - org.telegram.desktop
      - net.mullvad.MullvadBrowser
- name: Enable libvirtd
  ansible.builtin.systemd:
    name: libvirtd.service
    state: started
    enabled: yes
- name: Enable bluetooth
  ansible.builtin.systemd:
    name: bluetooth.service
    state: started
    enabled: yes
- name: Enable apparmor
  ansible.builtin.systemd:
    name: apparmor.service
    state: started
    enabled: yes
- name: Enable fstrim.timer
  ansible.builtin.systemd:
    name: fstrim.timer
    state: started
    enabled: yes
#- name: copy custom sysctls
#  copy:
#    src: 99-default.conf
#    dest: /etc/sysctl.d/99-default.conf
#    owner: root
#    group: root
#    mode: 0644
#- name: copy custom blacklist modules
#  copy:
#    src: blacklist-items.conf
#    dest: /etc/modprobe.d/blacklist-items.conf
#    owner: root
#    group: root
#    mode: 0644
#- name: boot linux-hardened first
#  lineinfile:
#    path: /etc/default/grub
#    line: 'GRUB_TOP_LEVEL="/boot/vmlinuz-linux-hardened"'
#    state: present
#    backup: yes
#  register: grub_top_level
#
#- name: run grub-mkconfig
#  command: grub-mkconfig -o /boot/grub/grub.cfg
#  when: grub_top_level.changed
#
#
